#include <ArxContainer.h>
#define ARX_VECTOR_DEFAULT_SIZE 255
#define ARX_MAP_DEFAULT_SIZE 255
#define ARX_DEQUE_DEFAULT_SIZE 255

enum class Dir
{
    N = 1,
    E = 2,
    S = -1,
    W = -2,
};

namespace Direction
{
    // Auto-generated by "../script/codegen.py"
    // This is the direction matrix for the map.
    // It is used to decide which way to turn at a junction.
    // If the desired path is from node 3 to node 5,
    // then `dir_matrix[3][5]` will give the compass direction to head
    // based on the pre-calculated shortest path.
    int dir_matrix[18][18] = {  {-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                {0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                {0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
                                {2,1,1,-1,1,1,1,1,0,0,0,0,1,0,0,0,0,0},
                                {3,1,1,3,-1,0,1,1,3,3,3,3,1,3,3,3,3,3},
                                {2,2,2,2,2,-1,2,2,2,2,2,2,2,2,2,2,2,2},
                                {3,2,1,3,3,3,-1,1,3,3,1,1,1,3,3,3,3,3},
                                {3,3,2,3,3,3,3,-1,3,0,0,0,0,0,0,0,0,0},
                                {2,2,2,2,2,2,2,2,-1,1,1,1,1,1,1,1,1,1},
                                {3,3,1,3,3,3,3,1,3,-1,1,1,1,0,0,0,0,0},
                                {3,1,1,3,3,3,1,1,3,3,-1,2,1,3,3,3,3,3},
                                {0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0},
                                {2,2,2,2,2,2,2,2,3,3,3,3,-1,3,3,3,3,3},
                                {2,2,2,2,2,2,2,2,2,2,2,2,2,-1,3,0,0,0},
                                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1},
                                {2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-1,1,1},
                                {3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-1,2},
                                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1}};

    // Auto-generated by "../script/codegen.py"
    // This is a mapping of (node, direction) to the node immediately in that direction.
    // This is useful to keep track of the robot's position.
    arx::map<arx::pair<int, int>, int> navigation_map = {
        {{10, 3}, 9},
        {{13, 0}, 15},
        {{11, 0}, 10},
        {{8, 1}, 9},
        {{15, 2}, 13},
        {{10, 2}, 11},
        {{0, 0}, 3},
        {{7, 3}, 6},
        {{7, 2}, 2},
        {{13, 2}, 9},
        {{6, 2}, 1},
        {{4, 0}, 5},
        {{9, 3}, 8},
        {{5, 2}, 4},
        {{9, 1}, 10},
        {{2, 0}, 7},
        {{3, 1}, 4},
        {{1, 0}, 6},
        {{17, 0}, 16},
        {{3, 2}, 0},
        {{16, 2}, 17},
        {{3, 0}, 8},
        {{12, 2}, 7},
        {{16, 3}, 15},
        {{7, 0}, 12},
        {{15, 1}, 16},
        {{8, 2}, 3},
        {{13, 3}, 14},
        {{12, 3}, 10},
        {{10, 1}, 12},
        {{4, 3}, 3},
        {{6, 3}, 4},
        {{4, 1}, 6},
        {{9, 0}, 13},
        {{14, 1}, 13},
        {{6, 1}, 7}
    };

    int nav_matrix[18][4] = {
        {3, -1, -1, -1},
        {6, -1, -1, -1},
        {7, -1, -1, -1},
        {8, 4, 0, -1},
        {5, 6, -1, 3},
        {-1, 7, 1, 4},
        {12, -1, 2, 6},
        {-1, 9, -3, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1},
        {-1, -1, -1, -1}
    };
}